{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/form/form.component.css","webpack:///./src/app/form/form.component.html","webpack:///./src/app/form/form.component.ts","webpack:///./src/app/keralafundsservice.service.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-main></app-main>\"","import { Component } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatIconRegistry } from '@angular/material';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(\n    iconRegistry: MatIconRegistry,\n    sanitizer: DomSanitizer\n  ) {\n    iconRegistry.addSvgIcon(\n      'teradata',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/teradata.svg')\n    );\n  }\n  title = 'keralafundproject';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\n\nimport { SharedModule } from './shared/shared.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormComponent } from './form/form.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [AppComponent, MainComponent, FormComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"form\\\">\\n  <form class=\\\"form\\\" [formGroup]=\\\"details\\\" (ngSubmit)=\\\"Submit(details.value)\\\">\\n    {{msg}}\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Amount to contribute\\\" type=\\\"number\\\" pattern=\\\"[0-9]*\\\" name=\\\"Amount\\\" [formControl]=\\\"details.controls['amount']\\\"\\n        formControlName=\\\"amount\\\">\\n    </mat-form-field>\\n\\n    <div *ngIf=\\\"!details.valid\\\">\\n      <p style=\\\"color: red\\\">*Only Positive Integral values are accpeted</p>\\n      <button mat-raised-button color color=\\\"warn\\\" type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!details.valid\\\">Contribute</button>\\n      <!-- <input type=\\\"submit\\\" class=\\\"cta-btn filled\\\" value=\\\"Submit\\\" [disabled]=\\\"!details.valid\\\" class=\\\"button-off\\\"> -->\\n    </div>\\n    <div *ngIf=\\\"details.valid\\\">\\n      <button mat-raised-button color color=\\\"primary\\\" type=\\\"submit\\\" value=\\\"Submit\\\" [disabled]=\\\"!details.valid\\\">Contribute</button>\\n      <!-- <input type=\\\"submit\\\" class=\\\"cta-btn filled\\\" value=\\\"Submit\\\" [disabled]=\\\"!details.valid\\\" class=\\\"button-on\\\"> -->\\n    </div>\\n  </form>\\n</div>\\n<div *ngIf=\\\"form===false\\\">\\n  {{msg}}\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { KeralafundsserviceService } from '../keralafundsservice.service';\nimport { ViewContainerRef } from '@angular/core';\nimport { TdDialogService } from '@covalent/core/dialogs';\nimport { Detail } from '../postdetails';\n\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { validateConfig } from '@angular/router/src/config';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  details: FormGroup;\n  user: string;\n  msg: string;\n  form = true;\n\n  constructor(\n    private keralaservice: KeralafundsserviceService,\n    private fb: FormBuilder,\n    private _dialogService: TdDialogService,\n    private _viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnInit() {\n    this.details = this.fb.group({\n      amount: [\n        ,\n        Validators.compose([\n          Validators.required,\n          Validators.pattern('[0-9]*'),\n          Validators.minLength(1),\n          Validators.min(1)\n        ])\n      ]\n    });\n  }\n\n  Submit(values: any) {\n    const cash: number = +values.amount;\n    this.openConfirm(cash);\n  }\n\n  openConfirm(amount: number): void {\n    this._dialogService\n      .openConfirm({\n        message: `The amount you want to contribute is ${amount}. Is this okay?`,\n        disableClose: false,\n        viewContainerRef: this._viewContainerRef,\n        title: 'Confirm',\n        cancelButton: 'No, I want to cancel',\n        acceptButton: 'Yes',\n        width: '500px'\n      })\n      .afterClosed()\n      .subscribe((accept: boolean) => {\n        if (accept) {\n          // DO SOMETHING\n          const postdetails: Detail = {\n            id: this.keralaservice.user.name.substring(3),\n            name: this.keralaservice.user.name,\n            amount: amount\n          };\n          this.keralaservice.postamount(postdetails).subscribe(\n            result => {\n              if (result === 201) {\n                this.msg =\n                  'Your submission has be updated thanks for submission. A mail will be sent to you';\n              }\n              if (result === 501) {\n                this.msg =\n                  'Some error has been occured please try again or contact us';\n              }\n              this.form = false;\n            },\n            error => {\n              console.log('got it');\n              if (error.status === 501) {\n                this.msg =\n                  'Some error has been occured please try again or contact us';\n              }\n              this.form = false;\n            }\n          );\n        } else {\n          // DO SOMETHING ELSE\n          console.log('DO nothing');\n        }\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Detail } from './postdetails';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KeralafundsserviceService {\n  private url = 'http://172.16.117.245:3000/';\n  public user: any = 'mock user';\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient) {}\n\n  getuser(): Observable<any> {\n    return this.http.get(this.url + 'user', { withCredentials: true }).pipe(\n      map(result => (this.user = result)),\n      catchError(this.handleError('getuser', []))\n    );\n  }\n\n  validate() {\n    const id = this.user.name.substring(3);\n    return this.http\n      .get(`${this.url}api/validate/?id=${id}`)\n      .pipe(catchError(this.handleError('validate')));\n  }\n\n  postamount(details: Detail): Observable<any> {\n    return this.http\n      .post(this.url + 'api/contribute', details, this.httpOptions)\n      .pipe(catchError(this.handleError<Detail>('postamount')));\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      // console.error(error); // log to console instead\n      result = error.status;\n      // TODO: better job of transforming error for user consumption\n      // Let the app keep running by returning an empty result.\n      // console.log(result as T);\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- <p>\\n  Hai {{user}}\\n</p>\\n<button>click me to test</button> -->\\n\\n<td-layout>\\n  <td-navigation-drawer flex sidenavTitle=\\\"Covalent\\\" logo=\\\"teradata\\\" name={{user}} email={{email}}>\\n    <!-- <mat-nav-list>\\n    <a *ngFor=\\\"let item of routes\\\" mat-list-item><mat-icon>{{item.icon}}</mat-icon>{{item.title}}</a>\\n  </mat-nav-list> -->\\n    <div td-navigation-drawer-menu>\\n      <mat-nav-list>\\n        <a *ngFor=\\\"let item of usermenu\\\" mat-list-item>\\n          <mat-icon>{{item.icon}}</mat-icon>{{item.title}}\\n        </a>\\n      </mat-nav-list>\\n    </div>\\n  </td-navigation-drawer>\\n  <td-layout-nav color=\\\"accent\\\">\\n    <div td-toolbar-content layout=\\\"row\\\" layout-align=\\\"start center\\\" flex>\\n      <button mat-icon-button td-menu-button tdLayoutToggle>\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <mat-icon class=\\\"mat-icon-logo cursor-pointer\\\" svgIcon=\\\"teradata\\\"></mat-icon>\\n      <!-- <span class=\\\"cursor-pointer\\\">Covalent</span> -->\\n      <span flex></span>\\n      <!-- <a mat-icon-button matTooltip=\\\"Docs\\\" href=\\\"https://teradata.github.io/covalent/\\\" target=\\\"_blank\\\"><mat-icon>chrome_reader_mode</mat-icon></a>\\n      <a mat-icon-button matTooltip=\\\"Github\\\" href=\\\"https://github.com/teradata/covalent\\\" target=\\\"_blank\\\"><mat-icon svgIcon=\\\"assets:github\\\"></mat-icon></a> -->\\n    </div>\\n    <img src=\\\"..\\\\assets\\\\keralafloods.jpg\\\" alt=\\\"image\\\" style=\\\"width:100%\\\">\\n    <td-layout-card-over color=\\\"accent\\\" cardWidth=\\\"50\\\">\\n      <mat-card-title>Contrubute to kerala</mat-card-title>\\n      <mat-card-subtitle>Hi {{user}},Donate for kerala</mat-card-subtitle>\\n      <mat-card-content>\\n        <h1 *ngIf=\\\"check === undefined\\\">{{loding}}</h1>\\n        <div *ngIf=\\\"user===undefined\\\">\\n          <p>Please login</p>\\n        </div>\\n        <div *ngIf=\\\"check\\\">\\n          <div *ngIf=\\\"user\\\">\\n            <app-form></app-form>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"check===false\\\">\\n          <h3>You had already submitted. For any further queries contact us.</h3>\\n        </div>\\n      </mat-card-content>\\n    </td-layout-card-over>\\n  </td-layout-nav>\\n</td-layout>\"","import { Component, OnInit } from '@angular/core';\nimport { KeralafundsserviceService } from '../keralafundsservice.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  user: any;\n  email: string;\n  check: boolean;\n  loding: String = 'Loading ...';\n  constructor(public service: KeralafundsserviceService) {}\n\n  ngOnInit() {\n    this.getuser();\n  }\n  validate() {\n    this.service.validate().subscribe(result => {\n      this.loding = '';\n      console.log(this.check);\n      if (result === 405) {\n        this.check = false;\n      } else {\n        this.check = true;\n      }\n    });\n  }\n  getuser() {\n    this.service.getuser().subscribe(result => {\n      this.user = result.name.substring(3);\n      this.email = this.user + '@teradata.com';\n      this.validate();\n    });\n  }\n}\n","import { NgModule, } from '@angular/core';\r\nimport { CommonModule, } from '@angular/common';\r\nimport { Http, HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule, } from '@angular/forms';\r\n\r\nimport { CovalentCommonModule } from '@covalent/core/common';\r\nimport { CovalentSearchModule } from '@covalent/core/search';\r\nimport { CovalentLayoutModule } from '@covalent/core/layout';\r\nimport { CovalentDialogsModule } from '@covalent/core/dialogs';\r\nimport { CovalentMediaModule } from '@covalent/core/media';\r\nimport { CovalentLoadingModule } from '@covalent/core/loading';\r\nimport { CovalentDataTableModule } from '@covalent/core/data-table';\r\nimport { CovalentNotificationsModule } from '@covalent/core/notifications';\r\nimport { CovalentMenuModule } from '@covalent/core/menu';\r\nimport { CovalentPagingModule } from '@covalent/core/paging';\r\nimport { CovalentStepsModule } from '@covalent/core/steps';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\nimport { NgxChartsModule, } from '@swimlane/ngx-charts';\r\n\r\nconst ANGULAR_MODULES: any[] = [\r\n  FormsModule, ReactiveFormsModule, HttpModule, HttpClientModule,\r\n];\r\n\r\nconst MATERIAL_MODULES: any[] = [\r\n  MatButtonModule, MatCardModule, MatIconModule,\r\n  MatListModule, MatDividerModule, MatMenuModule, MatTooltipModule,\r\n  MatSlideToggleModule, MatInputModule, MatCheckboxModule,\r\n  MatToolbarModule, MatSnackBarModule, MatSidenavModule,\r\n  MatTabsModule, MatSelectModule, MatRadioModule,\r\n];\r\n\r\nconst COVALENT_MODULES: any[] = [\r\n  CovalentDataTableModule, CovalentMediaModule, CovalentLoadingModule,\r\n  CovalentNotificationsModule, CovalentLayoutModule, CovalentMenuModule,\r\n  CovalentPagingModule, CovalentSearchModule, CovalentStepsModule,\r\n  CovalentCommonModule, CovalentDialogsModule,\r\n];\r\n\r\nconst CHART_MODULES: any[] = [\r\n  NgxChartsModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ANGULAR_MODULES,\r\n    MATERIAL_MODULES,\r\n    COVALENT_MODULES,\r\n    CHART_MODULES,\r\n  ],\r\n  declarations: [\r\n\r\n  ],\r\n  exports: [\r\n    ANGULAR_MODULES,\r\n    MATERIAL_MODULES,\r\n    COVALENT_MODULES,\r\n    CHART_MODULES,\r\n  ],\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}